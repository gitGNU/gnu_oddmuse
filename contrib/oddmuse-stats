#!/usr/bin/perl -w
# -*- perl -*-

=head1 NAME

oddmuse-stats - Plugin to monitor Oddmuse edits

=head1 CONFIGURATION

Set @parent_dirs in the script. The directories in this list are searched
for data directories containing rc.log files.

=head1 AUTHORS

Original Author: Alex Schroeder

=head1 LICENSE

GPLv3

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=cut

use File::Basename;

# The wiki directories may not contain any spaces.
my @parent_dirs = ('/home/alex', '/home/alex/campaignwiki');
my %wikis = ();
my $debug = $ENV{MUNIN_DEBUG};

for my $parent_dir (@parent_dirs) {
    warn "opening $parent_dir\n" if $debug;
    if (opendir(my $dh, $parent_dir)) {
	while(readdir $dh) {
	    next if $_ eq '.' or $_ eq '..';
	    if (-r "$parent_dir/$_/rc.log") {
		$wikis{basename($_)} = "$parent_dir/$_/rc.log";
	    } else {
		warn "discarding $_\n" if $debug;
	    }
	}
	closedir $dh;
    }
}

my $yesterday = time() - 86400;

if ($ARGV[0]) {
    if ($ARGV[0] eq 'autoconf') {
	if (keys %wikis) {
	    print "yes\n";
	    exit 0;
	} else {
	    print "no (no wikis found in " . join(", ", @parent_dirs) . ")\n";
	    exit 0;
	}
    } elsif ($ARGV[0] eq 'config') {
	print "graph_title Oddmuse Wikis\n";
	print "graph_category wikis\n";
	print "graph_info This graph shows how many edits the wiki had in the last 24h.\n";
	print "graph_vlabel edits/day\n";
	print "graph_order";
	for my $wiki (sort keys %wikis) {
	    print " $wiki";
	};
	print "\n";
	for my $wiki (sort keys %wikis) {
	    print "$wiki.label $wiki\n";
	}
	exit 0;
    }
}

for my $wiki (sort keys %wikis) {
    open (my $fh, '<', $wikis{$wiki})
	or die "cannot open " . $wikis{$wiki} . ": $!";
    my $value = 0;
    while (<$fh>) {
	my ($ts) = split(/\x1e/);
	$value++ if $ts and $ts >= $yesterday;
    }
    print "$wiki.value $value\n";
}
